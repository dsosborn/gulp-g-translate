{
  "{\"sourceRoot\":\"/Users/douglasosborne/repos/Upshot/gsuite-gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/douglasosborne/repos/Upshot/gsuite-gulp\",\"filename\":\"/Users/douglasosborne/repos/Upshot/gsuite-gulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/douglasosborne/repos/Upshot/gsuite-gulp\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/douglasosborne/repos/Upshot/gsuite-gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/douglasosborne/repos/Upshot/gsuite-gulp",
      "filename": "/Users/douglasosborne/repos/Upshot/gsuite-gulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/douglasosborne/repos/Upshot/gsuite-gulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/douglasosborne/repos/Upshot/gsuite-gulp/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/douglasosborne/repos/Upshot/gsuite-gulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/douglasosborne/repos/Upshot/gsuite-gulp",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require(\"gulp\"),\n    src = _require.src,\n    dest = _require.dest,\n    series = _require.series,\n    parallel = _require.parallel;\n\nvar fs = require(\"fs\");\n\nvar glob = require(\"glob\");\n\nvar template = require(\"gulp-template\");\n\nvar path = require(\"path\");\n\nvar uglify = require(\"gulp-uglify\");\n\nvar cleanCSS = require(\"gulp-clean-css\");\n\nvar htmlmin = require(\"gulp-htmlmin\");\n\nvar del = require(\"del\");\n\nvar debug = require(\"gulp-debug\");\n\nvar fg = require(\"fast-glob\");\n\nvar util = require(\"util\");\n\nfunction clean() {\n  return del([\"./tmp\", \"./dist\"]);\n}\n\nfunction html() {\n  return src(\"./tmp/**/*.html\").pipe(debug({\n    title: \"unicorn:\"\n  })).pipe(htmlmin({\n    collapseWhitespace: true\n  })).pipe(dest(\"dist\"));\n}\n\nfunction css() {\n  return src(\"./tmp/**/*.css\").pipe(cleanCSS({\n    compatibility: \"ie11\"\n  })).pipe(dest(\"dist\"));\n}\n\nfunction js() {\n  return src(\"./tmp/**/*.js\").pipe(uglify()).pipe(dest(\"dist\"));\n}\n\nfunction getFolderName(fullPath) {\n  var meaningfulPath = fullPath.replace(\"./src/\", \"\");\n  var path = meaningfulPath.split(\".\", 1);\n  return path[0].replace(/\\//gi, \"_\");\n}\n\nfunction getCampaignName(fullPath) {\n  var meaningfulPath = fullPath.replace(\"./src/\", \"\");\n  var path = meaningfulPath.split(\"/\", 1);\n  return path[0];\n}\n\nfunction build(cb) {\n  var files = fg.sync(\"./src/**/*.json\", {\n    dot: true\n  });\n  console.log(files);\n  files.forEach(function (file) {\n    var jsonData = \"\";\n    var split = path.basename(file).split(/x|\\./, 2);\n    var bannerWidth = split[0];\n    var bannerHeight = split[1];\n    fs.readFile(file, \"utf8\", function (err, contents) {\n      jsonData = contents;\n      jsonData = jsonData.replace(/\\\\r/g, \"\\\\\\\\r\");\n      jsonData = jsonData.replace(/G Suite/g, \"G Suite\");\n      jsonData = jsonData.replace(/\\\\u0003/g, \"\\\\\\\\r\"); // console.log(`${file} width=${bannerWidth} height=${bannerHeight}`);\n\n      var campaignName = getCampaignName(file);\n      var folderName = getFolderName(file);\n      console.log({\n        folderName: folderName,\n        campaignName: campaignName\n      });\n      return src(\"./template/**/*\").pipe(template({\n        width: bannerWidth,\n        height: bannerHeight,\n        lottiejson: jsonData\n      })).pipe(dest(\"./tmp/\" + campaignName + \"/\" + folderName));\n    });\n  });\n  cb();\n}\n\nfunction buildIndex(cb) {\n  var links = [];\n  var folders = fg.sync([\"./dist/*\", \"!**/*.*\"], {\n    onlyFiles: false\n  });\n  console.log(folders);\n  folders.forEach(function (folder) {\n    var banners = fg.sync(folder + \"/**/index.html\", {\n      dot: true\n    });\n    var folderName = folder.replace(\"./dist/\", \"\");\n    links.push({\n      campaign: folderName,\n      banners: banners\n    });\n  });\n  var html = \"\";\n  links.forEach(function (folder) {\n    html += \"<h2>\".concat(folder.campaign.replace(\"gs_\", \"\"), \"</h2><ul>\");\n    folder.banners.forEach(function (banner) {\n      banner = banner.replace(\"./dist/\", \"./\");\n      var plainName = banner.replace(\"./\", \"\");\n      plainName = plainName.replace(folder.campaign + \"/\", \"\");\n      plainName = plainName.replace(folder.campaign + \"_\", \"\");\n      plainName = plainName.replace(\"/index.html\", \"\");\n      html += \"<li><a href=\\\"\".concat(banner, \"\\\">\").concat(plainName, \"</a></li>\");\n    });\n    html += \"</ul>\\n\";\n  });\n  return src(\"./index-template/*\").pipe(template({\n    links: html\n  })).pipe(dest(\"./dist/\"));\n  console.log(html); // glob(\"./dist/*\", function(er, files) {\n  //   files.forEach((folder, index) => {\n  //     folder = folder.replace(\"./dist/\", \"\");\n  //     console.log({ folder: folder, index: index });\n  //   });\n  // });\n\n  cb();\n} // Convert fs.readFile into Promise version of same\n\n\nvar readFile = util.promisify(fs.readFile);\n\nfunction getStuff(file) {\n  return readFile(file);\n}\n\nfunction build2(cb) {\n  var files = fg.sync(\"./src/**/*.json\", {\n    dot: true\n  }); // console.log(files);\n\n  files.forEach(function (file) {\n    var jsonData = \"\";\n    var split = path.basename(file).split(/x|\\./, 2);\n    var bannerWidth = split[0];\n    var bannerHeight = split[1];\n    getStuff(file).then(function (data) {\n      console.log(data);\n      console.log(\"done?\");\n      cb();\n    });\n  });\n}\n\nfunction error() {\n  console.log(\"ERROR\");\n}\n\nexports[\"default\"] = series(clean, build, parallel(html, css, js));\nexports.build = series(clean, build);\nexports.dist = series(parallel(html, css, js));\nexports.index = series(buildIndex);\nexports.test = series(build2, error);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "require",
        "src",
        "dest",
        "series",
        "parallel",
        "fs",
        "glob",
        "template",
        "path",
        "uglify",
        "cleanCSS",
        "htmlmin",
        "del",
        "debug",
        "fg",
        "util",
        "clean",
        "html",
        "pipe",
        "title",
        "collapseWhitespace",
        "css",
        "compatibility",
        "js",
        "getFolderName",
        "fullPath",
        "meaningfulPath",
        "replace",
        "split",
        "getCampaignName",
        "build",
        "cb",
        "files",
        "sync",
        "dot",
        "console",
        "log",
        "forEach",
        "file",
        "jsonData",
        "basename",
        "bannerWidth",
        "bannerHeight",
        "readFile",
        "err",
        "contents",
        "campaignName",
        "folderName",
        "width",
        "height",
        "lottiejson",
        "buildIndex",
        "links",
        "folders",
        "onlyFiles",
        "folder",
        "banners",
        "push",
        "campaign",
        "banner",
        "plainName",
        "promisify",
        "getStuff",
        "build2",
        "then",
        "data",
        "error",
        "exports",
        "dist",
        "index",
        "test"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/douglasosborne/repos/Upshot/gsuite-gulp",
      "sourcesContent": [
        "const { src, dest, series, parallel } = require(\"gulp\");\nconst fs = require(\"fs\");\nconst glob = require(\"glob\");\nconst template = require(\"gulp-template\");\nconst path = require(\"path\");\nconst uglify = require(\"gulp-uglify\");\nconst cleanCSS = require(\"gulp-clean-css\");\nconst htmlmin = require(\"gulp-htmlmin\");\nconst del = require(\"del\");\nconst debug = require(\"gulp-debug\");\nconst fg = require(\"fast-glob\");\nconst util = require(\"util\");\n\nfunction clean() {\n  return del([\"./tmp\", \"./dist\"]);\n}\nfunction html() {\n  return src(\"./tmp/**/*.html\")\n    .pipe(debug({ title: \"unicorn:\" }))\n    .pipe(htmlmin({ collapseWhitespace: true }))\n    .pipe(dest(\"dist\"));\n}\n\nfunction css() {\n  return src(\"./tmp/**/*.css\")\n    .pipe(cleanCSS({ compatibility: \"ie11\" }))\n    .pipe(dest(\"dist\"));\n}\n\nfunction js() {\n  return src(\"./tmp/**/*.js\")\n    .pipe(uglify())\n    .pipe(dest(\"dist\"));\n}\n\nfunction getFolderName(fullPath) {\n  let meaningfulPath = fullPath.replace(\"./src/\", \"\");\n  let path = meaningfulPath.split(\".\", 1);\n  return path[0].replace(/\\//gi, \"_\");\n}\n\nfunction getCampaignName(fullPath) {\n  let meaningfulPath = fullPath.replace(\"./src/\", \"\");\n  let path = meaningfulPath.split(\"/\", 1);\n  return path[0];\n}\n\nfunction build(cb) {\n  const files = fg.sync(\"./src/**/*.json\", { dot: true });\n  console.log(files);\n  files.forEach(file => {\n    let jsonData = \"\";\n    let split = path.basename(file).split(/x|\\./, 2);\n    let bannerWidth = split[0];\n    let bannerHeight = split[1];\n    fs.readFile(file, \"utf8\", function(err, contents) {\n      jsonData = contents;\n      jsonData = jsonData.replace(/\\\\r/g, \"\\\\\\\\r\");\n      jsonData = jsonData.replace(/G Suite/g, \"G Suite\");\n      jsonData = jsonData.replace(/\\\\u0003/g, \"\\\\\\\\r\");\n      // console.log(`${file} width=${bannerWidth} height=${bannerHeight}`);\n      let campaignName = getCampaignName(file);\n      let folderName = getFolderName(file);\n      console.log({ folderName: folderName, campaignName: campaignName });\n      return src(\"./template/**/*\")\n        .pipe(\n          template({\n            width: bannerWidth,\n            height: bannerHeight,\n            lottiejson: jsonData\n          })\n        )\n        .pipe(dest(\"./tmp/\" + campaignName + \"/\" + folderName));\n    });\n  });\n  cb();\n}\n\nfunction buildIndex(cb) {\n  let links = [];\n  let folders = fg.sync([\"./dist/*\", \"!**/*.*\"], { onlyFiles: false });\n  console.log(folders);\n\n  folders.forEach(folder => {\n    const banners = fg.sync(folder + \"/**/index.html\", {\n      dot: true\n    });\n    let folderName = folder.replace(\"./dist/\", \"\");\n    links.push({ campaign: folderName, banners: banners });\n  });\n  let html = \"\";\n  links.forEach(folder => {\n    html += `<h2>${folder.campaign.replace(\"gs_\", \"\")}</h2><ul>`;\n    folder.banners.forEach(banner => {\n      banner = banner.replace(\"./dist/\", \"./\");\n      let plainName = banner.replace(\"./\", \"\");\n      plainName = plainName.replace(folder.campaign + \"/\", \"\");\n      plainName = plainName.replace(folder.campaign + \"_\", \"\");\n      plainName = plainName.replace(\"/index.html\", \"\");\n      html += `<li><a href=\"${banner}\">${plainName}</a></li>`;\n    });\n    html += `</ul>\\n`;\n  });\n  return src(\"./index-template/*\")\n    .pipe(\n      template({\n        links: html\n      })\n    )\n    .pipe(dest(\"./dist/\"));\n\n  console.log(html);\n\n  // glob(\"./dist/*\", function(er, files) {\n  //   files.forEach((folder, index) => {\n  //     folder = folder.replace(\"./dist/\", \"\");\n  //     console.log({ folder: folder, index: index });\n  //   });\n  // });\n  cb();\n}\n\n// Convert fs.readFile into Promise version of same\nconst readFile = util.promisify(fs.readFile);\n\nfunction getStuff(file) {\n  return readFile(file);\n}\n\nfunction build2(cb) {\n  const files = fg.sync(\"./src/**/*.json\", { dot: true });\n  // console.log(files);\n  files.forEach(file => {\n    let jsonData = \"\";\n    let split = path.basename(file).split(/x|\\./, 2);\n    let bannerWidth = split[0];\n    let bannerHeight = split[1];\n    getStuff(file).then(data => {\n      console.log(data);\n      console.log(\"done?\");\n      cb();\n    });\n  });\n}\n\nfunction error() {\n  console.log(\"ERROR\");\n}\n\nexports.default = series(clean, build, parallel(html, css, js));\nexports.build = series(clean, build);\nexports.dist = series(parallel(html, css, js));\nexports.index = series(buildIndex);\nexports.test = series(build2, error);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573820978667
  }
}